body {
  background-color: black;
  margin: 0;
  padding: 0;
  overflow-x: hidden; /* Keep this to prevent overall page horizontal scroll */
}

.title{
  color:aliceblue;
}

.gallery-container {
  display: flex;
  flex-direction: column; /* Stacks the H1 above the gallery items */
  align-items: center;   /* Centers the H1 and the gallery-item horizontally */
  width: 100%;
  box-sizing: border-box;
  padding-bottom: 20px;
}

.gallery-container h1 {
  color: white;
  margin-top: 20px;
  margin-bottom: 20px;
  text-align: center;
}

.gallery-item {
  display: grid; /* <<< IMPORTANT CHANGE: Use CSS Grid for 2D layout */

  /* Define responsive columns:
     - `auto-fill` creates as many columns as can fit.
     - `minmax(250px, 1fr)` means each column will be at least 250px wide,
       but can grow up to `1fr` (fraction of available space) to fill the row.
     Adjust `250px` to your desired minimum card width. */
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));

  grid-gap: 20px; /* Spacing between your ArtCard components, both horizontally and vertically */

  /* This property helps fill in empty spaces in the grid by rearranging items
     if a smaller item can fit into a gap. This aids the "mosaic" effect. */
  grid-auto-flow: dense;

  padding: 20px; /* Padding around the entire grid of images */

  width: 100%; /* Takes full available width of its parent */
  max-width: 1200px; /* Optional: Sets a maximum width for the gallery on large screens */
  box-sizing: border-box; /* Include padding/border in the element's total width */

  /* REMOVE any `overflow-x` or `overflow-y` properties from here,
     as the main page will handle vertical scrolling. */
}

/* IMPORTANT: Styling for the individual ArtCard component itself (assuming it renders a div with class "art-card") */
/* This ensures the cards take their content's height and fit into the grid cells */
.art-card { /* Make sure your ArtCard component applies this class (e.g., <div className="art-card">) */
  background-color: #333; /* A background for the cards */
  border-radius: 8px;
  overflow: hidden; /* Ensures any content (like images) doesn't spill out */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Subtle shadow for depth */

  /* Make ArtCard a flex container to easily stack its own content (image, title, description) */
  display: flex;
  flex-direction: column;
  justify-content: flex-start; /* Align content to the top within the card */
  align-items: center; /* Center content horizontally within the card */
}

/* IMPORTANT: Styling for the image *inside* the ArtCard */
.art-card img {
  width: 100%; /* Image takes full width of its parent ArtCard */
  height: auto; /* Maintain aspect ratio, allowing for varying card heights */
  display: block; /* Removes any extra space below the image */
  object-fit: cover; /* Ensures the image covers its area, cropping if necessary without distortion */
}

/* Example: Styling for text within your ArtCard if you have it */
.art-card .title {
  color: white;
  padding: 10px;
  font-size: 1.2em;
  font-weight: bold;
  text-align: center;
}

.art-card .description {
  color: #ccc;
  padding: 0 10px 10px 10px;
  font-size: 0.9em;
  text-align: center;
}


/* Styles for the modal overlay (the dimmed background that covers the page) */
.modal-overlay {
  position: fixed; /* Positions the overlay relative to the viewport */
  top: 0;
  left: 0;
  width: 100vw; /* Takes full viewport width */
  height: 100vh; /* Takes full viewport height */
  background-color: rgba(0, 0, 0, 0.7); /* Semi-transparent black backdrop */
  display: flex; /* Use flexbox to center the modal content */
  justify-content: center; /* Horizontally center the modal content */
  align-items: center; /* Vertically center the modal content */
  z-index: 1000; /* Ensures the modal is on top of other content */
}

/* Styles for the modal content box itself */
.modal-content {
  background-color: #222; /* Dark background for the modal */
  padding: 25px; /* Padding inside the modal */
  border-radius: 10px; /* Rounded corners for the modal box */
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5); /* A subtle shadow for depth */
  position: relative; /* Allows positioning of the close button inside */
  max-width: 80%; /* Limit modal width to 80% of screen */
  max-height: 80vh; /* Limit modal height to 80% of viewport height */
  overflow-y: auto; /* Add vertical scroll if content exceeds max-height */
  display: flex; /* Use flexbox for internal layout (image + details) */
  flex-direction: column; /* Stack image and details vertically */
  align-items: center; /* Center content like image horizontally within the modal */
}

/* Styles for the close button */
.modal-close-button {
  position: absolute; /* Position relative to .modal-content */
  top: 10px;
  right: 15px;
  background: none; /* No background */
  border: none; /* No border */
  font-size: 2em; /* Large 'x' */
  color: white; /* White color for the 'x' */
  cursor: pointer; /* Indicates it's clickable */
  padding: 0; /* Remove default button padding */
  line-height: 1; /* Align 'x' properly */
  z-index: 10; /* Ensure button is above other modal content */
}

.modal-close-button:hover {
  color: #aaa; /* Slightly dim on hover */
}

/* Styles for the image inside the modal */
.modal-image {
  max-width: 100%; /* Ensure image fits within modal content */
  height: auto; /* Maintain aspect ratio */
  display: block; /* Removes any extra space below the image */
  margin-bottom: 15px; /* Space between image and details */
  border-radius: 5px; /* Slightly rounded corners for the image */
}

/* Styles for the text details inside the modal */
.modal-details h3 {
  color: white;
  margin-top: 0; /* Remove default top margin */
  margin-bottom: 5px; /* Space between title and description */
  text-align: center;
}

.modal-details p {
  color: #ccc;
  font-size: 1em;
  line-height: 1.5;
  text-align: center;
}